import logging
import os

# –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ .env
try:
    from dotenv import load_dotenv
    load_dotenv()
except ImportError:
    pass

from telegram.ext import Application, CommandHandler, MessageHandler, filters,  CallbackQueryHandler
from database import init_db
from handlers.profile import my_plants, build_profile_conversation
from handlers.diagnosis import handle_symptoms as diagnose_text
from handlers.recommendations import get_recommendations
from handlers.profile import delete_plant_cb
logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
    level=logging.INFO
)

TOKEN = os.getenv("BOT_TOKEN")
if not TOKEN:
    logging.error("‚ùå BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
    exit(1)


async def start(update, context):
    text = (
        "üåø *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!*\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:\n"
        "‚Ä¢ üå± –ú–æ–∏ —Ä–∞—Å—Ç–µ–Ω–∏—è ‚Äî /myplants\n"
        "‚Ä¢ üìö –ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π ‚Äî /knowledge (—Å–∫–æ—Ä–æ)\n"
        "‚Ä¢ üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ (—Ç–µ–∫—Å—Ç) ‚Äî –ø—Ä–æ—Å—Ç–æ –æ–ø–∏—à–∏—Ç–µ —Å–∏–º–ø—Ç–æ–º—ã\n"
        "‚Ä¢ üõé –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è ‚Äî (—Å–∫–æ—Ä–æ)\n"
    )
    await update.message.reply_text(text, parse_mode="Markdown")


async def help_command(update, context):
    await update.message.reply_text(
        "*–ö–æ–º–∞–Ω–¥—ã:*\n"
        "/start ‚Äî –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n"
        "/myplants ‚Äî —Å–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö —Ä–∞—Å—Ç–µ–Ω–∏–π, –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ\n"
        "/recommendations ‚Äî –æ–±—â–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —É—Ö–æ–¥—É\n",
        parse_mode="Markdown"
    )


def main():
    init_db()

    app = Application.builder().token(TOKEN).build()

    # –ö–æ–º–∞–Ω–¥—ã
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("help", help_command))
    app.add_handler(CommandHandler("myplants", my_plants))
    app.add_handler(CommandHandler("recommendations", get_recommendations))

    # –î–∏–∞–ª–æ–≥ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ä–∞—Å—Ç–µ–Ω–∏—è
    app.add_handler(build_profile_conversation())

    # –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø–æ —Ç–µ–∫—Å—Ç—É ‚Äî –ª—é–±—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, diagnose_text))
    app.add_handler(CallbackQueryHandler(delete_plant_cb, pattern="^delete_"))
    app.add_handler(CommandHandler("myplants", my_plants))
    app.add_handler(build_profile_conversation())
    app.add_handler(CallbackQueryHandler(delete_plant_cb, pattern="^delete_"))
    logging.info("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    app.run_polling()


if __name__ == "__main__":
    main()
